"""
무식하게 접근 : 최대 테스트 케이스 = 20, 최대 인원 = 100,000
각각이 인원들에 대해 루프를 돌며 서류, 면접 등수가 둘 다 본인보다 높은 인원이 있는지 체크 -> 있으면 탈락
이 경우 20 X 100000 X 10000 = 2천억번 연산을 함 --> 통과 불가

부분구조를 가지는가? O
정답 : 서류가 1등인 인원 + 나머지 인원중 합격인원

중복되는 부분문제가 있는지? : 모르겠다..
-> 정답이 서류 1등 인원 + 나머지 인원중 합격인원으로 쪼갤 수 있으나,
나머지 인원중 합격인원을 구하는 부분문제에 대한 감이 안 잡힘..

greedy? 
정답 : 서류순위가 높은 순서대로 뽑으면 정답
만약 뽑힌 인원의 면접등수가 합격자들의 면접등수 중 가장 높은 면접등수보다 높으면 그 인원도 합격임
어차피 기존에 합격한 인원들은 그 인원보다 서류순위는 높으므로 면접순위만 비교하면 됨

증명 :
가정 = 서류순위가 1등인 인원을 제외하고 뽑은 합긱인원수가 답이다.
반박 : 문제의 조건상 서류순위가 1등인 인원은 다른 모든 인원들에 대해 서류성적이 뒤쳐지지 않으므로 합격가능
즉 애시당초 1등인 인원을 포함해야 답이다.
"""

import sys

T = int(sys.stdin.readline())

for _ in range(T):
    N = int(sys.stdin.readline())
    rank = []
    for i in range(N):
        rank.append(list(map(int, sys.stdin.readline().split())))
    rank.sort()
    # count = 합격자수, top_rank_of_passer : 합격자들의 면접순위 중 가장 높은 순위
    count, top_rank_of_passer = 0, 100001
    for person in rank:
        # 만약 현재 순회하는 사람의 면접등수가 합격자들의 면접순위 중 가장 높은 순위보다 높다면 그 인원 합격
        if person[1] < top_rank_of_passer:
            count += 1
            top_rank_of_passer = person[1]
    print(count)

"""
아이디어를 떠올리는데 많이 걸렸다..ㅠ
브루트 포스로 풀면 시간내에 통과 못할거라는 거까지만 확신이 서고, dp로 나가야 할지 그리디로 가야 할지
판단하는데 있어서 경험이 많이 부족한 것 같다. 많이 연습해봐야겠다.
"""