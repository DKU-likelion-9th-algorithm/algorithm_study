"""
무식하게 풀기 : 1부터 N까지 순회하며 각 숫자들이 한수가 되는지 카운트
시간복잡도 = N * 한수인지 체크하는 시간
한수인지 체크하는 것은 각 수의 자릿수를 비교하면 되는데 N의 최댓값은 1000이므로
충분히 상수시간에 계산가능하리라 생각됨. 시간복잡도는 O(n) 정도가 될 것이며
제한시간 2초 내에 충분히 통과가능할 듯..

또한 1 ~ 99는 모두 한수가 되므로 이들에 대해서는 계산이 필요없을 듯함.
그리고 1000은 어차피 한수가 아니므로 100 ~ 999의 숫자들에 대해서만 한수인지 따지면 된다.
"""

N = int(input())

# x가 한수인지 판별 : 등차수열 a1, a2, a3에서 a1 + a3 = 2 * a2임을 이용
def isHanSoo(x):
    if x % 10 + (x // 100) == 2 * ((x // 10) % 10):
        return 1
    return 0


# N보다 작거나 같은 한수의 수를 리턴
def solution(N):
    if N <= 99:
        return N
    
    count = 99;
    for i in range(100, N + 1):
        count += isHanSoo(i)
    
    return count

print(solution(N))