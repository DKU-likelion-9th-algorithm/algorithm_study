'''
dp배열을 만들 때 필요한 정보는 동전의 가치, 구해야 하는 가치의 합, 결과(경우의 수)이다.
결과가 dp배열에 들어가야 할 값이어야 하니까 동전의 가치와 구해야 하는 가치의 합을 각각 dp배열의 row, col으로 두었다.

lst의 개수가 많아도 100개, K가 10,000이니까 100 * 10,000 = 1,000,000으로 통과.
'''

import sys
input = sys.stdin.readline

N, K = map(int, input().split())
lst = []
dp = [0 for i in range(K + 1)]
dp[0] = 1  # 모든 동전은 각 동전의 가치가 합과 같을 때에서 1가지

# 동전 가치 입력받기
for i in range(N):
    lst.append(int(input()))

for i in lst:  # 각 동전의 가치
    for j in range(1, K + 1):  # 구해야 하는 가치의 합
        if j - i >= 0:   # j-i < 0 = 동전의 가치 - 합 < 0 이므로 동전의 가치<합이면 결과는 0이어서 계산 x
            dp[j] += dp[j - i]  # 아래 풀이 참고
print(dp[K])

'''
만들어야 할 합(j) = x + 현재의 동전의 가치(i)
ex. 만들어야 합은 6이고 동전의 가치가 2일때, 6 = x + 2.
    따라서 x = 4이므로 j가 4가 되는 방법들에게 각각 2를 더해주면 된다.
    결론적으로 j가 4가 되는 방법들의 가짓수를 모두 더해주면 된다.
'''